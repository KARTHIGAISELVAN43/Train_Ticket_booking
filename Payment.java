/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package train;

import com.mycompany.edittraininfo.Employee;
import java.awt.Color;
import java.awt.Font;
import java.util.Random;
import javax.swing.JOptionPane;
import train.Reserve_Train.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author myash
 */
public class Payment extends javax.swing.JFrame {
    String temp=new String();

    /**
     * Creates new form Payment
     */
    String id;
    String select;
    String amount;
    String otp1;
    Connection con;
    Statement stmt;
    ResultSet result;
    
    public Payment() {
        initComponents();
    }
     public static boolean isValid(long number)
    {
       return (getSize(number) >= 13 && 
               getSize(number) <= 16) && 
               (prefixMatched(number, 4) || 
                prefixMatched(number, 5) || 
                prefixMatched(number, 37) || 
                prefixMatched(number, 6)) && 
              ((sumOfDoubleEvenPlace(number) + 
                sumOfOddPlace(number)) % 10 == 0);
    }
 
    // Get the result from Step 2
    public static int sumOfDoubleEvenPlace(long number)
    {
        int sum = 0;
        String num = number + "";
        for (int i = getSize(number) - 2; i >= 0; i -= 2) 
            sum += getDigit(Integer.parseInt(num.charAt(i) + "") * 2);
         
        return sum;
    }
 
    // Return this number if it is a single digit, otherwise,
    // return the sum of the two digits
    
    public static int getDigit(int number)
    {
        if (number < 9)
            return number;
        return number / 10 + number % 10;
    }
 
    // Return sum of odd-place digits in number
    public static int sumOfOddPlace(long number)
    {
        int sum = 0;
        String num = number + "";
        for (int i = getSize(number) - 1; i >= 0; i -= 2) 
            sum += Integer.parseInt(num.charAt(i) + "");        
        return sum;
    }
 
    // Return true if the digit d is a prefix for number
    public static boolean prefixMatched(long number, int d)
    {
        return getPrefix(number, getSize(d)) == d;
    }
 
    // Return the number of digits in d
    public static int getSize(long d)
    {
        String num = d + "";
        return num.length();
    }
 
    // Return the first k number of digits from 
    // number. If the number of digits in number
    // is less than k, return number.
    public static long getPrefix(long number, int k)
    {
        if (getSize(number) > k) {
            String num = number + "";
            return Long.parseLong(num.substring(0, k));
        }
        return number;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        debit = new javax.swing.JRadioButton();
        credit = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        cardnumber = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cvv = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        pass = new javax.swing.JPasswordField();
        Check = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        opass = new javax.swing.JTextField();
        otppass = new javax.swing.JButton();
        verifypass = new javax.swing.JTextField();
        Back = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        ticketid = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setMinimumSize(new java.awt.Dimension(1200, 600));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Payment Section");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(354, 19, 300, 48);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Mode of Payment");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(50, 170, 170, 40);

        debit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        debit.setText("Debit Card");
        getContentPane().add(debit);
        debit.setBounds(300, 180, 98, 21);

        credit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        credit.setText("Credit Card");
        getContentPane().add(credit);
        credit.setBounds(530, 180, 100, 21);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Card Number");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(50, 270, 190, 30);

        cardnumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardnumberActionPerformed(evt);
            }
        });
        getContentPane().add(cardnumber);
        cardnumber.setBounds(300, 262, 340, 30);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("CVV");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(50, 330, 160, 30);
        getContentPane().add(cvv);
        cvv.setBounds(300, 330, 110, 30);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Password");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(50, 400, 170, 30);

        pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passActionPerformed(evt);
            }
        });
        getContentPane().add(pass);
        pass.setBounds(300, 400, 210, 40);

        Check.setBackground(new java.awt.Color(204, 204, 255));
        Check.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Check.setText("Check");
        Check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckActionPerformed(evt);
            }
        });
        getContentPane().add(Check);
        Check.setBounds(270, 490, 170, 30);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("OTP Password");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(60, 560, 200, 30);

        opass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opassActionPerformed(evt);
            }
        });
        getContentPane().add(opass);
        opass.setBounds(300, 560, 170, 30);

        otppass.setBackground(new java.awt.Color(255, 255, 51));
        otppass.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        otppass.setText("Verify");
        otppass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otppassActionPerformed(evt);
            }
        });
        getContentPane().add(otppass);
        otppass.setBounds(410, 620, 160, 40);

        verifypass.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(verifypass);
        verifypass.setBounds(560, 560, 200, 30);

        Back.setBackground(new java.awt.Color(255, 0, 0));
        Back.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        getContentPane().add(Back);
        Back.setBounds(190, 620, 160, 40);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Enter your ticket Id to Pay");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(60, 100, 300, 30);

        ticketid.setAction(cardnumber.getAction());
        ticketid.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        ticketid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ticketidFocusGained(evt);
            }
        });
        ticketid.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                ticketidInputMethodTextChanged(evt);
            }
        });
        ticketid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ticketidActionPerformed(evt);
            }
        });
        ticketid.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ticketidPropertyChange(evt);
            }
        });
        ticketid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ticketidKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ticketidKeyTyped(evt);
            }
        });
        ticketid.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                ticketidVetoableChange(evt);
            }
        });
        getContentPane().add(ticketid);
        ticketid.setBounds(400, 100, 210, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passActionPerformed

    private void opassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opassActionPerformed

    private void otppassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otppassActionPerformed
        // TODO add your handling code here:
         String otp2 = opass.getText();
         id = ticketid.getText();
          String y23 = ticketid.getText();
       String query1="SELECT * FROM reserved WHERE reserveid = '"+y23+"' ";
        Database_1 g = new Database_1();
        ResultSet f1 = g.select(query1);
         String u1 = "";
        try {
            while(f1.next())
            {
               
            u1 = f1.getString("Fare");
                 
            }
            amount = u1; 
 
        } catch (SQLException ex) {
            Logger.getLogger(Reserve_Train.class.getName()).log(Level.SEVERE, null, ex);
        }
         
           if(otp1.equals(otp2)) {
               try {
                   con = DriverManager.getConnection("jdbc:mysql://localhost:3306/train_db","root","");
                   String status = "Successfull";
                 
                   String query = "insert into payment values('"+id+"','"+amount+"','"+select+"','"+status+"')";
                   stmt = con.createStatement();
                   int y =  stmt.executeUpdate(query);
                   if(y == 1)
                   JOptionPane.showConfirmDialog(this, "SuccessFull Have Happy Journey", "Success", JOptionPane.INFORMATION_MESSAGE);
                   else
                       JOptionPane.showConfirmDialog(this, "Unsuccessfull", "Error", JOptionPane.ERROR_MESSAGE);
               } catch (SQLException ex) {
                   Logger.getLogger(Payment.class.getName()).log(Level.SEVERE, null, ex);
                                  }
        } else
               JOptionPane.showConfirmDialog(this, "Invaild Number Try Payment Again", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_otppassActionPerformed

    private void cardnumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardnumberActionPerformed
        // TODO add your handling code here:
      
          
    }//GEN-LAST:event_cardnumberActionPerformed

    private void CheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckActionPerformed
        // TODO add your handling code here:
        
       long pass1;
        pass1 = Long.parseLong(cardnumber.getText());
       boolean val = isValid(pass1);
     //  if(val == false)
       //{
         //  JOptionPane.showConfirmDialog(this, "Invalid Card Number");
       //}
      // else
       {
           
           if(debit.isSelected())
               select = "Debit Card";
           else
               select = "Credit Card";
           
       }
       String y23 = ticketid.getText();
       String query1="SELECT * FROM reserved WHERE reserveid = '"+y23+"' ";
        Database_1 g = new Database_1();
        ResultSet f1 = g.select(query1);
         String u1 = "";
        try {
            while(f1.next())
            {
               
            u1 = f1.getString("Fare");
                 
            }
            amount = u1; 
 
        } catch (SQLException ex) {
            Logger.getLogger(Reserve_Train.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       Random random = new Random();
           
           // Define the range of characters allowed in OTP (here, using only digits)
           String numbers = "0123456789";
           
           StringBuilder otp = new StringBuilder();
           for (int i = 0; i < 6; i++) {
               // Get a random index from 0 to numbers.length() - 1
               int index = random.nextInt(numbers.length());
               
               // Append the character at the randomly generated index to the OTP
               otp.append(numbers.charAt(index));
           }
           otp1 = otp.toString();
           verifypass.setText(otp1);
           verifypass.setEditable(false);
    }//GEN-LAST:event_CheckActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
      Reserve_Train g = new Reserve_Train();
      g.setVisible(true);
      this.setVisible(false);
    }//GEN-LAST:event_BackActionPerformed

    private void ticketidFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ticketidFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_ticketidFocusGained

    private void ticketidInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_ticketidInputMethodTextChanged
        // TODO add your handling code here:
        ticketid.setFont(Font.BOLD);
    }//GEN-LAST:event_ticketidInputMethodTextChanged

    private void ticketidPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ticketidPropertyChange
        // TODO add your handling code here:
        System.out.println(evt.getPropertyName());
       // if(ticketid.getText().equals("kowshik"))
        //    ticketid.setBackground(Color.red);
        
    }//GEN-LAST:event_ticketidPropertyChange

    private void ticketidVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_ticketidVetoableChange
        // TODO add your handling code here:
        System.out.println("vetoable");
        if(ticketid.getText().equals("kowshik"))
            ticketid.setBackground(Color.blue);
        else
            ticketid.setBackground(Color.gray);
        
    }//GEN-LAST:event_ticketidVetoableChange

    private void ticketidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ticketidKeyTyped
        // TODO add your handling code here:
        System.out.println("KeyTyped");
        if(evt.getKeyChar()==' '){
           
        }
        if(temp.length()>=ticketid.getCaretPosition()){
            temp+=evt.getKeyChar();
        }
        else{
            temp.
            temp=temp.trim();
        }
        System.out.println("Temp : "  +temp+temp.length());
        if(temp.equals("kowshik"))
            ticketid.setBackground(Color.blue);
        else
            ticketid.setBackground(Color.gray);
        System.out.print("Caret : " +(ticketid.getCaretPosition()+1));
        
    }//GEN-LAST:event_ticketidKeyTyped

    private void ticketidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ticketidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ticketidActionPerformed

    private void ticketidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ticketidKeyReleased
        // TODO add your handling code here:
        System.out.println("heo key released");
    }//GEN-LAST:event_ticketidKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Payment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Check;
    private javax.swing.JTextField cardnumber;
    private javax.swing.JRadioButton credit;
    private javax.swing.JTextField cvv;
    private javax.swing.JRadioButton debit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField opass;
    private javax.swing.JButton otppass;
    private javax.swing.JPasswordField pass;
    private javax.swing.JTextField ticketid;
    private javax.swing.JTextField verifypass;
    // End of variables declaration//GEN-END:variables
}
